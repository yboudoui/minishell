tester/out.minishell:9:pipex->infile :-1
tester/out.minishell:10:pipex->outfile :-1
src/execution/pipex/execute.c:17:	g_global.exit_code = pipex->builtin(argv);
src/execution/pipex/execute.c:23:/* 	if (pipex->redir_error) */
src/execution/pipex/execute.c:41:	pipe_fd(pipex, pipex->fd);
src/execution/pipex/execute.c:43:		pipex->cmd_path = get_cmd_path(pipex, argv[0]);
src/execution/pipex/execute.c:44:	/* printf("cmd_path = %s\n", pipex->cmd_path); */
src/execution/pipex/execute.c:45:	if (pipex->cmd_path == NULL)
src/execution/pipex/execute.c:46:		pipex->exitcode = CMD_NOT_FOUND;
src/execution/pipex/execute.c:49:	/* 	close_fd(&pipex->infile); */
src/execution/pipex/execute.c:50:	/* 	close_fd(&pipex->outfile); */
src/execution/pipex/execute.c:54:	fork_pid(&pipex->pid[pipex->i]);
src/execution/pipex/execute.c:55:	if (pipex->pid[pipex->i] == 0)
src/execution/pipex/execute.c:61:	free(pipex->cmd_path);
src/execution/pipex/execute.c:62:	dup_fd(pipex->fd[0], STDIN_FILENO);
src/execution/pipex/execute.c:63:	close_fd(&pipex->fd[1]);
src/execution/pipex/execute.c:64:	close_fd(&pipex->fd[0]);
src/execution/pipex/cmd.c:18:	if (pipex->infile > 2)
src/execution/pipex/cmd.c:20:		if (dup_fd(pipex->infile, STDIN_FILENO) == -1)
src/execution/pipex/cmd.c:22:		if (close_fd(&pipex->infile) == -1)
src/execution/pipex/cmd.c:24:		if (close_fd(&pipex->fd[0]) == -1)
src/execution/pipex/cmd.c:29:		if (close_fd(&pipex->fd[0]) == -1)
src/execution/pipex/cmd.c:37:	if (pipex->outfile > 2)
src/execution/pipex/cmd.c:39:		if (dup_fd(pipex->outfile, STDOUT_FILENO) == -1)
src/execution/pipex/cmd.c:41:		if (close_fd(&pipex->outfile) == -1)
src/execution/pipex/cmd.c:43:		if (close_fd(&pipex->fd[1]) == -1)
src/execution/pipex/cmd.c:46:	else if (pipex->i == pipex->argc - 1)
src/execution/pipex/cmd.c:48:		if (close_fd(&pipex->fd[1]) == -1)
src/execution/pipex/cmd.c:52:	else if (pipex->i != pipex->argc - 1)
src/execution/pipex/cmd.c:54:		if (dup_fd(pipex->fd[1], STDOUT_FILENO) == -1)
src/execution/pipex/cmd.c:56:		if (close_fd(&pipex->fd[1]) == -1)
src/execution/pipex/cmd.c:71:	if (pipex->cmd_path == NULL)
src/execution/pipex/cmd.c:73:	if (pipex->builtin)
src/execution/pipex/cmd.c:75:		meta_exit(pipex->builtin(argv));
src/execution/pipex/cmd.c:78:	if (execve(pipex->cmd_path, argv, parse_env(pipex->env)) == -1)
src/execution/pipex/cmd.c:80:		pipex->exitcode = 1;
src/execution/pipex/cmd.c:81:		meta_exit(pipex->exitcode);
src/execution/pipex/cmd.c:83:	meta_exit(pipex->exitcode);
src/execution/pipex/get_paths.c:21:	pipex->path = false;
src/execution/pipex/get_paths.c:27:			pipex->path = true;
src/execution/pipex/pipe.c:19:	pipex->remove = 1;
src/execution/pipex/pipex.c:17:	pipex->pid = ft_calloc(pipex->argc, sizeof(pid_t));
src/execution/pipex/pipex.c:18:	if (pipex->pid == NULL)
src/execution/pipex/pipex.c:28:	while (i < pipex->argc)
src/execution/pipex/pipex.c:30:		waitpid(pipex->pid[i], &pipex->status, 0);
src/execution/pipex/pipex.c:33:	if (WIFSIGNALED(pipex->status))
src/execution/pipex/pipex.c:35:		if (WTERMSIG(pipex->status) == 2)
src/execution/pipex/pipex.c:40:		if (WTERMSIG(pipex->status) == 3)
src/execution/pipex/pipex.c:46:	else if (WIFEXITED(pipex->status))
src/execution/pipex/pipex.c:47:		g_global.exit_code = WEXITSTATUS(pipex->status);
src/execution/pipex/pipex.c:55:	pipex->abs_path_cmd = false;
src/execution/pipex/pipex.c:56:	pipex->builtin = NULL;
src/execution/pipex/pipex.c:65:	dup_fd(g_global.pipex->stdin_fd, STDIN_FILENO);
src/execution/pipex/pipex.c:66:	close_fd(&g_global.pipex->stdin_fd);
src/execution/pipex/pipex.c:67:	if (g_global.pipex->infile > 2)
src/execution/pipex/pipex.c:68:		close_fd(&g_global.pipex->infile);
src/execution/pipex/pipex.c:69:	if (g_global.pipex->outfile > 2)
src/execution/pipex/pipex.c:70:		close_fd(&g_global.pipex->outfile);
src/execution/pipex/pipex.c:71:	free(g_global.pipex->pid);
src/execution/pipex/pipex.c:72:	string_array_destroy(g_global.pipex->paths);
src/execution/pipex/pipex.c:73:	g_global.pipex->paths = NULL;
src/execution/pipex/pipex.c:84:	pipex->argc = list_size((t_list)cmds);
src/execution/pipex/pipex.c:85:	pipex->builtin = NULL;
src/execution/pipex/pipex.c:86:	if (pipex->argc == 1 && cmds->cmd->argv)
src/execution/pipex/pipex.c:88:		pipex->builtin = is_builtin(cmds->cmd->argv[0]);
src/execution/pipex/pipex.c:89:		if (pipex->builtin)
src/execution/pipex/pipex.c:95:	pipex->stdin_fd = dup(STDIN_FILENO);
src/execution/pipex/pipex.c:96:	pipex->paths = get_paths(pipex);
src/execution/pipex/pipex.c:97:	pipex->env = env_list_singleton(NULL);
src/execution/pipex/pipex.c:103:		pipex->redir_error = manage_redirs(cmds->cmd->redir, pipex);
src/execution/pipex/pipex.c:104:		printf("redir_error = %d\n", pipex->redir_error);
src/execution/pipex/pipex.c:107:		printf("loop %d\n", pipex->i);
src/execution/pipex/pipex.c:108:		pipex->i++;
src/execution/pipex/path_null.c:18:	if (pipex->path == false && !pipex->builtin)
src/execution/pipex/get_cmd_path.c:19:		pipex->abs_path_cmd = true;
src/execution/pipex/get_cmd_path.c:55:	pipex->builtin = is_builtin(cmd);
src/execution/pipex/get_cmd_path.c:56:	if (pipex->builtin)
src/execution/pipex/get_cmd_path.c:63:	if (pipex->paths == NULL)
src/execution/pipex/get_cmd_path.c:65:	while (pipex->paths[i])
src/execution/pipex/get_cmd_path.c:67:		check_slash(pipex->paths[i]);
src/execution/pipex/get_cmd_path.c:68:		tmp1 = ft_strjoin(pipex->paths[i], "/");
src/execution/pipex/get_cmd_path.c:78:	if (!pipex->abs_path_cmd)
src/execution/pipex/redir.c:102:	pipex->infile = fd_infile;
src/execution/pipex/redir.c:103:	printf("pipex->infile :%d\n", fd_infile);
src/execution/pipex/redir.c:104:	pipex->outfile = fd_outfile;
src/execution/pipex/redir.c:105:	printf("pipex->outfile :%d\n", fd_outfile);
